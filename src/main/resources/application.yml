server:
  port: 8078

sample:
  rabbitmq:
    exchange: default



spring:
  datasource:
    url: jdbc:mysql://localhost:3306/payment_service
    username: springstudent
    password: springstudent
  jpa:
    properties:
      javax:
        persistence:
          validation:
            mode: none
    hibernate:
      ddl-auto: update
    open-in-view: false
  main:
    banner-mode: off
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
  application:
    name: payment-service

client:
  feign:
    bakirBank:
      path: http://localhost:8081/bakirbank #TODO: Change this PORT to the actual PORT of the bakirbank
      makePayment: /payment/makePayment
      cancelPayment: /payment/cancelPayment

    microServiceRegister-service:
      path: http://localhost:8090/registerservice
      ready: /ready
      stopped: /stopped

    email-service:
      path: http://localhost:8085/email

    user-service:
      path: http://localhost:8082/user
      getBalance: /balance/getbalance
      addBalance: /balance/addbalance

    stock-service:
      path: http://localhost:8083/stock-service
      getProduct: /product/get
      reduceStock: /product/stock/reduce
      checkStock: /product/stock/check

    token-service:
      path: http://localhost:8079/token
      extractUsername: /extract/username

app:
  routesController:
    controllers:
      secure:
        paymentServiceController: /payment
    requestMapping:
      secure:
        payment-service:
          getItemsInCart: /cart/get
          createOrder: /cart/add
          deleteByProductCode: /cart/clear
          buyItemsInCart: /cart/buy
          queryByTrackingNumber: /query-with-trackingNumber
          userOrderedProduct: /product/ordered